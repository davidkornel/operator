
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: virtualservices.servicemesh.l7mp.io
spec:
  group: servicemesh.l7mp.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualServiceSpec defines the desired state of VirtualService
            properties:
              listeners:
                items:
                  description: Listener Listener configuration. Exactly one of UDP
                    or TCP field should be used
                  properties:
                    name:
                      type: string
                    tcp:
                      properties:
                        port:
                          format: int32
                          type: integer
                      required:
                      - port
                      type: object
                    udp:
                      properties:
                        cluster:
                          properties:
                            endpoints:
                              items:
                                properties:
                                  health_check_port:
                                    description: If HealthCheck configured in cluster
                                      definition this port will be used for health
                                      checking
                                    format: int32
                                    type: integer
                                  host:
                                    description: Exactly one of host or selector should
                                      be used Address of the upstream host if no selector
                                      had been defined
                                    maxProperties: 1
                                    properties:
                                      address:
                                        description: "Exactly one of address or selector
                                          field should be used \t\t  Address of the
                                          upstream host. \t\t  Can be an exact address
                                          like 127.0.0.1        Or a domain like my.domain"
                                        type: string
                                      selector:
                                        additionalProperties:
                                          type: string
                                        description: Exactly one of address or selector
                                          field should be used matchLabels is a map
                                          of {key,value} pairs.
                                        type: object
                                    type: object
                                  name:
                                    type: string
                                  port:
                                    description: Upstream host's port
                                    format: int32
                                    type: integer
                                required:
                                - name
                                - port
                                type: object
                              type: array
                            health_check:
                              description: HealthCheck Optional, if omitted all upstream
                                hosts will be considered healthy all the time
                              properties:
                                interval:
                                  format: int32
                                  type: integer
                                protocol:
                                  enum:
                                  - TCP
                                  type: string
                              required:
                              - interval
                              - protocol
                              type: object
                            name:
                              type: string
                            service_discovery:
                              type: string
                          required:
                          - endpoints
                          - name
                          - service_discovery
                          type: object
                        port:
                          description: Port Listening port
                          format: int32
                          type: integer
                      required:
                      - cluster
                      - port
                      type: object
                  required:
                  - name
                  type: object
                type: array
              selector:
                additionalProperties:
                  type: string
                type: object
            required:
            - selector
            type: object
          status:
            description: VirtualServiceStatus defines the observed state of VirtualService
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
